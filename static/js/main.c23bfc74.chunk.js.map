{"version":3,"sources":["config/api.js","CryptoContext.js","components/CoinsTable.js","components/Banner/Carousel.js","components/Banner/Banner.js","Pages/HomePage.js","components/SelectButton.js","config/data.js","components/CoinInfo.js","Pages/CoinPage.js","components/Header.js","App.js","index.js"],"names":["CoinList","currency","SingleCoin","id","HistoricalChart","days","TrendingCoins","Crypto","createContext","CryptoContext","children","useState","setCurrency","symbol","setSymbol","useEffect","Provider","value","CryptoState","useContext","numberWithCommas","x","toString","replace","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","classes","makeStyles","row","backgroundColor","cursor","fontFamily","pagination","color","useStyles","history","useHistory","darkTheme","createTheme","palette","primary","main","type","fetchCoins","a","axios","get","data","console","log","handleSearch","filter","coin","name","toLowerCase","includes","ThemeProvider","theme","Container","style","textAlign","Typography","variant","margin","TextField","label","marginBottom","width","onChange","e","target","TableContainer","component","Paper","LinearProgress","Table","aria-label","TableHead","TableRow","map","head","TableCell","fontWeight","align","TableBody","slice","profit","price_change_percentage_24h","onClick","push","className","scope","display","gap","src","image","alt","height","flexDirection","textTransform","fontSize","current_price","toFixed","market_cap","Pagination","count","length","padding","justifyContent","ul","_","window","scroll","Carousel","trending","setTrending","fetchTrendingCoins","carousel","alignItems","carouselItem","items","to","mouseTracking","infinite","autoPlayInterval","animationDuration","disableDotsControls","disableButtonsControls","responsive","0","512","autoPlay","banner","backgroundImage","bannerContent","paddingTop","tagline","Banner","Homepage","SelectButton","selected","selectbutton","border","borderRadius","paddingLeft","paddingRight","chartDays","CoinInfo","historicData","setHistoricData","setDays","flag","setflag","container","marginTop","breakpoints","down","fetchHistoricData","prices","CircularProgress","size","thickness","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","day","CoinPage","useParams","setCoin","fetchCoin","sidebar","heading","description","paddingBottom","marketData","alignSelf","large","ReactHtmlParser","en","split","market_cap_rank","market_data","title","flex","Header","AppBar","position","Toolbar","Select","labelId","marginLeft","MenuItem","App","minHeight","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAAaA,EAAW,SAACC,GAAD,2EACwCA,EADxC,+DAGXC,EAAa,SAACC,GAAD,uDACkBA,IAG/BC,EAAkB,SAACD,GAAD,IAAKE,EAAL,uDAAY,IAAKJ,EAAjB,8FACaE,EADb,qCAC4CF,EAD5C,iBAC6DI,IAG/EC,EAAgB,SAACL,GAAD,2EACmCA,EADnC,qF,OCPvBM,EAASC,0BAwBAC,EArBO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAGNC,mBAAS,OAHH,mBAG/BV,EAH+B,KAGrBW,EAHqB,OAIVD,mBAAS,UAJC,mBAI/BE,EAJ+B,KAIvBC,EAJuB,KActC,OARAC,qBAAU,WACS,QAAbd,EAAoBa,EAAU,UACZ,QAAbb,GAAoBa,EAAU,OACtC,CAACb,IAMF,eAACM,EAAOS,SAAR,CAAiBC,MAAO,CAAEhB,WAAUW,cAAaC,UAAjD,UACCH,EADD,iBASSQ,EAAc,WACzB,OAAOC,qBAAWZ,I,oHCNb,SAASa,EAAiBC,GAC/B,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAGxC,SAASC,IAAc,IAAD,IACTb,mBAAS,IADA,mBAC5Bc,EAD4B,KACrBC,EADqB,OAELf,oBAAS,GAFJ,mBAE5BgB,EAF4B,KAEnBC,EAFmB,OAGPjB,mBAAS,IAHF,mBAG5BkB,EAH4B,KAGpBC,EAHoB,OAIXnB,mBAAS,GAJE,mBAI5BoB,EAJ4B,KAItBC,EAJsB,OAMNd,IAArBjB,EAN2B,EAM3BA,SAAUY,EANiB,EAMjBA,OAkBZoB,EAhBYC,YAAW,CAC3BC,IAAK,CACHC,gBAAiB,UACjBC,OAAQ,UACR,UAAW,CACTD,gBAAiB,WAEnBE,WAAY,cAEdC,WAAY,CACV,4BAA6B,CAC3BC,MAAO,UAKGC,GACVC,EAAUC,cAEVC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,QAERC,KAAM,UAIJC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBvB,GAAW,GADM,SAEMwB,IAAMC,IAAIrD,EAASC,IAFzB,gBAETqD,EAFS,EAETA,KACRC,QAAQC,IAAIF,GAEZ5B,EAAS4B,GACT1B,GAAW,GANM,2CAAH,qDAShBb,qBAAU,WACRmC,MAEC,CAACjD,IAEJ,IAAMwD,EAAe,WACnB,OAAOhC,EAAMiC,QACX,SAACC,GAAD,OAGEA,EAAKC,KAAKC,cAAcC,SAASjC,IACjC8B,EAAK9C,OAAOgD,cAAcC,SAASjC,OAIzC,OACE,cAACkC,EAAA,EAAD,CAAeC,MAAOpB,EAAtB,SACE,eAACqB,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,UAA/B,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,KACRH,MAAO,CAAEI,OAAQ,GAAIhC,WAAY,cAFnC,iDAMA,cAACiC,EAAA,EAAD,CACEC,MAAM,iCACNH,QAAQ,WACRH,MAAO,CAAEO,aAAc,GAAIC,MAAO,QAClCC,SAAU,SAACC,GAAD,OAAO9C,EAAU8C,EAAEC,OAAO5D,UAErC,eAAC6D,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,gBAGErD,EACC,cAACsD,EAAA,EAAD,CAAgBf,MAAO,CAAE9B,gBAAiB,UAG1C,eAAC8C,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,CAAWlB,MAAO,CAAE9B,gBAAiB,WAArC,SACE,cAACiD,EAAA,EAAD,UAGG,CAAC,OAAQ,QAAS,aAAc,cAAcC,KAAI,SAACC,GAAD,OACjD,cAACC,EAAA,EAAD,CACEtB,MAAO,CACL1B,MAAO,QACPiD,WAAY,MACZnD,WAAY,cAKdoD,MAAgB,SAATH,EAAkB,GAAK,QAThC,SAWGA,GALIA,UAUb,cAACI,EAAA,EAAD,UACGlC,IACEmC,MAAmB,IAAZ7D,EAAO,GAAsB,IAAZA,EAAO,GAAU,IACzCuD,KAAI,SAACnD,GACJ,IAAM0D,EAAS1D,EAAI2D,4BAA8B,EACjD,OACE,eAACT,EAAA,EAAD,CAEEU,QAAS,kBAAMrD,EAAQsD,KAAR,iBAAuB7D,EAAIhC,MAC1C8F,UAAWhE,EAAQE,IAHrB,UAME,eAACqD,EAAA,EAAD,CACET,UAAU,KACVmB,MAAM,MACNhC,MAAO,CACLiC,QAAS,OACTC,IAAK,IALT,UAQE,qBACEC,IAAG,OAAElE,QAAF,IAAEA,OAAF,EAAEA,EAAKmE,MACVC,IAAKpE,EAAIyB,KACT4C,OAAO,KACPtC,MAAO,CAAEO,aAAc,MAEzB,sBACEP,MAAO,CAAEiC,QAAS,OAAQM,cAAe,UAD3C,UAGE,sBACEvC,MAAO,CACLwC,cAAe,YACfC,SAAU,IAHd,SAMGxE,EAAItB,SAEP,sBAAMqD,MAAO,CAAE1B,MAAO,YAAtB,SACGL,EAAIyB,aAIX,eAAC4B,EAAA,EAAD,CAAWE,MAAM,QAAjB,UACG7E,EAAQ,IACRO,EAAiBe,EAAIyE,cAAcC,QAAQ,OAE9C,eAACrB,EAAA,EAAD,CACEE,MAAM,QACNxB,MAAO,CACL1B,MAAOqD,EAAS,EAAI,oBAAsB,MAC1CJ,WAAY,KAJhB,UAOGI,GAAU,IACV1D,EAAI2D,4BAA4Be,QAAQ,GAR3C,OAUA,eAACrB,EAAA,EAAD,CAAWE,MAAM,QAAjB,UACG7E,EAAQ,IACRO,EACCe,EAAI2E,WAAWxF,WAAWsE,MAAM,GAAI,IAHxC,SA9CKzD,EAAIyB,iBA8DzB,cAACmD,EAAA,EAAD,CAGEC,QAAoB,QAAZ,EAAAvD,WAAA,eAAgBwD,QAAS,IAAIJ,QAAQ,GAC7C3C,MAAO,CACLgD,QAAS,GACTxC,MAAO,OACPyB,QAAS,OACTgB,eAAgB,UAGlBlF,QAAS,CAAEmF,GAAInF,EAAQM,YAGvBoC,SAAU,SAAC0C,EAAGpG,GACZe,EAAQf,GACRqG,OAAOC,OAAO,EAAG,aCrN7B,IAwGeC,EAxGE,WAAO,IAAD,EACW7G,mBAAS,IADpB,mBACd8G,EADc,KACJC,EADI,OAGQxG,IAArBjB,EAHa,EAGbA,SAAUY,EAHG,EAGHA,OAGZ8G,EAAkB,uCAAG,8BAAAxE,EAAA,sEAEFC,IAAMC,IAAI/C,EAAcL,IAFtB,gBAEjBqD,EAFiB,EAEjBA,KAERC,QAAQC,IAAIF,GACZoE,EAAYpE,GALa,2CAAH,qDAUxBvC,qBAAU,WACR4G,MAEC,CAAC1H,IAEJ,IAgBMgC,EAhBYC,aAAW,iBAAO,CAClC0F,SAAU,CACRpB,OAAQ,MACRL,QAAS,OACT0B,WAAY,UAEdC,aAAc,CACZ3B,QAAS,OACTM,cAAe,SACfoB,WAAY,SACZxF,OAAQ,UACRqE,cAAe,YACflE,MAAO,YAIKC,GAGVsF,EAAQN,EAASnC,KAAI,SAAC3B,GAAU,IAAD,EAI/BkC,GAAa,OAAJlC,QAAI,IAAJA,OAAA,EAAAA,EAAMmC,8BAA+B,EAElD,OAEE,cADA,CACC,IAAD,CAAMG,UAAWhE,EAAQ6F,aAAcE,GAAE,iBAAYrE,EAAKxD,IAA1D,UACE,qBACEkG,IAAG,OAAE1C,QAAF,IAAEA,OAAF,EAAEA,EAAM2C,MACXC,IAAK5C,EAAKC,KACV4C,OAAO,KACPtC,MAAO,CAAEO,aAAc,MAExB,kDACEd,QADF,IACEA,OADF,EACEA,EAAM9C,OADR,OAGC,uBACEqD,MAAO,CACL1B,MAAOqD,EAAS,EAAI,oBAAsB,MAC1CJ,WAAY,KAHhB,UAMEI,GAAU,IANZ,gBAOIlC,QAPJ,IAOIA,GAPJ,UAOIA,EAAMmC,mCAPV,aAOI,EAAmCe,QAAQ,GAP/C,aAVJ,WAoBE,uBAAM3C,MAAO,CAAEyC,SAAU,GAAIlB,WAAY,KAAzC,UAGG5E,EAHH,IAGYO,EAAgB,OAACuC,QAAD,IAACA,OAAD,EAACA,EAAMiD,cAAcC,QAAQ,aAgB/D,OACE,qBAAKZ,UAAWhE,EAAQ2F,SAAxB,SACE,cAAC,IAAD,CACEK,eAAa,EACbC,UAAQ,EACRC,iBAAkB,IAClBC,kBAAmB,KACnBC,qBAAmB,EACnBC,wBAAsB,EACtBC,WAlBa,CACjBC,EAAG,CACDT,MAAO,GAETU,IAAK,CACHV,MAAO,IAcLA,MAAOA,EACPW,UAAQ,OCxGVjG,EAAYP,aAAW,iBAAO,CAClCyG,OAAQ,CAENC,gBAAiB,sBAEnBC,cAAe,CACbrC,OAAQ,IACRL,QAAS,OACTM,cAAe,SACfqC,WAAY,GACZ3B,eAAgB,gBAElB4B,QAAS,CACP5C,QAAS,OACTK,OAAQ,MACRC,cAAe,SACfU,eAAgB,SAChBhD,UAAW,UAEbyD,SAAU,CACRpB,OAAQ,MACRL,QAAS,OACT0B,WAAY,cAuCDmB,MAnCf,WACE,IAAM/G,EAAUQ,IAEhB,OACE,qBAAKwD,UAAWhE,EAAQ0G,OAAxB,SACE,eAAC1E,EAAA,EAAD,CAAWgC,UAAWhE,EAAQ4G,cAA9B,UACE,sBAAK5C,UAAWhE,EAAQ8G,QAAxB,UACE,cAAC3E,EAAA,EAAD,CACEC,QAAQ,KACRH,MAAO,CACLuB,WAAY,OACZhB,aAAc,GACdnC,WAAY,cALhB,2BAUA,cAAC8B,EAAA,EAAD,CACEC,QAAQ,YACRH,MAAO,CACL1B,MAAO,WACPkE,cAAe,aACfpE,WAAY,cALhB,yEAYF,cAAC,EAAD,UC3CO2G,EAXE,WACf,OACE,qCAGE,cAAC,EAAD,IACA,cAACzH,EAAD,Q,oDC2BS0H,EA/BM,SAAC,GAAqC,IAAnCxI,EAAkC,EAAlCA,SAAUyI,EAAwB,EAAxBA,SAAUpD,EAAc,EAAdA,QAsBpC9D,EArBYC,YAAW,CAC3BkH,aAAc,CACZC,OAAQ,iBACRC,aAAc,EACdpC,QAAS,GACTqC,YAAa,GACbC,aAAc,GACdlH,WAAY,aACZD,OAAQ,UACRD,gBAAiB+G,EAAW,OAAS,GACrC3G,MAAO2G,EAAW,QAAU,GAE5B1D,WAAY0D,EAAW,IAAM,IAC7B,UAAW,CACT/G,gBAAiB,OACjBI,MAAO,SAETkC,MAAO,QAIKjC,GAEhB,OACE,sBAAMsD,QAASA,EAASE,UAAWhE,EAAQmH,aAA3C,SACG1I,KChCM+I,EAAY,CACvB,CACEjF,MAAO,WACPvD,MAAO,GAET,CACEuD,MAAO,UACPvD,MAAO,IAET,CACEuD,MAAO,WACPvD,MAAO,IAET,CACEuD,MAAO,SACPvD,MAAO,MCwIIyI,EAxIE,SAAC,GAAc,IAAZ/F,EAAW,EAAXA,KAAW,EAEWhD,qBAFX,mBAEtBgJ,EAFsB,KAERC,EAFQ,OAKLjJ,mBAAS,GALJ,mBAKtBN,EALsB,KAKhBwJ,EALgB,KAOrB5J,EAAaiB,IAAbjB,SAPqB,EASLU,oBAAS,GATJ,mBAStBmJ,EATsB,KAShBC,EATgB,KA6BvB9H,EAlBYC,aAAW,SAAC8B,GAAD,MAAY,CACvCgG,UAAU,aACRtF,MAAO,MACPyB,QAAS,OACTM,cAAe,SACfoB,WAAY,SACZV,eAAgB,SAChB8C,UAAW,GACX/C,QAAS,IACRlD,EAAMkG,YAAYC,KAAK,MAAQ,CAC9BzF,MAAO,OACPuF,UAAW,EACX/C,QAAS,GACT4B,WAAY,OAKFrG,GAEV2H,EAAiB,uCAAG,8BAAAjH,EAAA,sEACDC,IAAMC,IAAIjD,EAAgBuD,EAAKxD,GAAIE,EAAMJ,IADxC,gBAChBqD,EADgB,EAChBA,KACRyG,GAAQ,GAERH,EAAgBtG,EAAK+G,QAJG,2CAAH,qDASvBtJ,qBAAU,WACRqJ,MAEC,CAAC/J,IAEJ,IAAMuC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,QAERC,KAAM,UAIV,OACE,cAACc,EAAA,EAAD,CAAeC,MAAOpB,EAAtB,SACE,qBAAKqD,UAAWhE,EAAQ+H,UAAxB,UAEIL,GAAsB,IAAPG,EACf,cAACQ,EAAA,EAAD,CACEpG,MAAO,CAAE1B,MAAO,QAChB+H,KAAM,IACNC,UAAW,IAIb,qCAEE,cAAC,IAAD,CAGElH,KAAM,CAEJmH,OAAQd,EAAarE,KAAI,SAAC3B,GAGxB,IAAI+G,EAAO,IAAIC,KAAKhH,EAAK,IACrBiH,EAEFF,EAAKG,WAAa,GAAlB,UACOH,EAAKG,WAAa,GADzB,YAC+BH,EAAKI,aADpC,iBAEOJ,EAAKG,WAFZ,YAE0BH,EAAKI,aAF/B,OAIF,OAAgB,IAATzK,EAAauK,EAAOF,EAAKK,wBAGlCC,SAAU,CACR,CACE1H,KAAMqG,EAAarE,KAAI,SAAC3B,GAAD,OAAUA,EAAK,MACtCa,MAAM,gBAAD,OAAkBnE,EAAlB,sBAAoCJ,GACzCgL,YAAa,aAKnBC,QAAS,CACPC,SAAU,CACRC,MAAO,CACLC,OAAQ,OAKhB,qBACEnH,MAAO,CACLiC,QAAS,OACT8D,UAAW,GACX9C,eAAgB,eAChBzC,MAAO,QALX,SAUG+E,EAAUnE,KAAI,SAACgG,GAAD,OACb,cAAC,EAAD,CAIEvF,QAAS,WAAO8D,EAAQyB,EAAIrK,OAC1B8I,GAAQ,IAGVZ,SAAUmC,EAAIrK,QAAUZ,EAR1B,SAWGiL,EAAI9G,OAVA8G,EAAIrK,oBC+CZsK,GAvKE,WAAM,IAKbpL,EAAOqL,cAAPrL,GALa,EAQGQ,qBARH,mBAQdgD,EARc,KAQR8H,EARQ,OAUQvK,IAArBjB,EAVa,EAUbA,SAAUY,EAVG,EAUHA,OAGZ6K,EAAS,uCAAG,8BAAAvI,EAAA,sEACOC,IAAMC,IAAInD,EAAWC,IAD5B,gBACRmD,EADQ,EACRA,KAERmI,EAAQnI,GAHQ,2CAAH,qDAQfvC,qBAAU,WACR2K,MAEC,IAEH,IAoDMzJ,EApDYC,aAAW,SAAC8B,GAAD,cAAY,CACvCgG,UAAU,aACR7D,QAAS,QACRnC,EAAMkG,YAAYC,KAAK,MAAQ,CAC9B1D,cAAe,SACfoB,WAAY,WAGhB8D,SAAO,GACLjH,MAAO,OADF,cAEJV,EAAMkG,YAAYC,KAAK,MAAQ,CAC9BzF,MAAO,SAHJ,wBAKI,QALJ,8BAMU,UANV,2BAOO,UAPP,0BAQM,IARN,4BASQ,kBATR,GAWPkH,QAAS,CACPnG,WAAY,OACZhB,aAAc,GACdnC,WAAY,cAEduJ,YAAa,CACXnH,MAAO,OACPpC,WAAY,aACZ4E,QAAS,GACT4E,cAAe,GACfhD,WAAY,EACZ3E,UAAW,WAEb4H,YAAU,GACRC,UAAW,QACX9E,QAAS,GACT4B,WAAY,GACZpE,MAAO,QAJC,cAKPV,EAAMkG,YAAYC,KAAK,MAAQ,CAC9BhE,QAAS,OACTgB,eAAgB,iBAPV,cAUPnD,EAAMkG,YAAYC,KAAK,MAAQ,CAC9B1D,cAAe,SACfoB,WAAY,WAZN,cAcP7D,EAAMkG,YAAYC,KAAK,MAAQ,CAC9BtC,WAAY,UAfN,MAoBIpF,GAGhB,OAAKkB,EAIH,cADA,CACA,OAAKsC,UAAWhE,EAAQ+H,UAAxB,UACE,sBAAK/D,UAAWhE,EAAQ0J,QAAxB,UACE,qBACEtF,IAAG,OAAE1C,QAAF,IAAEA,OAAF,EAAEA,EAAM2C,MAAM2F,MACjB1F,IAAG,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAMC,KACX4C,OAAO,MACPtC,MAAO,CAAEO,aAAc,MAEzB,cAACL,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAWhE,EAAQ2J,QAA5C,gBACGjI,QADH,IACGA,OADH,EACGA,EAAMC,OAET,eAACQ,EAAA,EAAD,CAAYC,QAAQ,YAAY4B,UAAWhE,EAAQ4J,YAAnD,UAIGK,IAAe,OAACvI,QAAD,IAACA,OAAD,EAACA,EAAMkI,YAAYM,GAAGC,MAAM,MAAM,IAJpD,OAMA,sBAAKnG,UAAWhE,EAAQ8J,WAAxB,UACE,uBAAM7H,MAAO,CAAEiC,QAAS,QAAxB,UACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAWhE,EAAQ2J,QAA5C,mBADF,YAKE,cAACxH,EAAA,EAAD,CACEC,QAAQ,KACRH,MAAO,CACL5B,WAAY,cAHhB,SAOGlB,EAAgB,OAACuC,QAAD,IAACA,OAAD,EAACA,EAAM0I,sBAI5B,uBAAMnI,MAAO,CAAEiC,QAAS,QAAxB,UACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAWhE,EAAQ2J,QAA5C,4BADF,YAKE,eAACxH,EAAA,EAAD,CACEC,QAAQ,KACRH,MAAO,CACL5B,WAAY,cAHhB,UAMGzB,EAAQ,IACRO,EAAgB,OAEfuC,QAFe,IAEfA,OAFe,EAEfA,EAAM2I,YAAY1F,cAAc3G,EAAS4D,sBAI/C,uBAAMK,MAAO,CAAEiC,QAAS,QAAxB,UACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAWhE,EAAQ2J,QAA5C,yBADF,YAKE,eAACxH,EAAA,EAAD,CACEC,QAAQ,KACRH,MAAO,CACL5B,WAAY,cAHhB,UAMGzB,EAAQ,IACRO,EAAgB,OACfuC,QADe,IACfA,OADe,EACfA,EAAM2I,YAAYxF,WAAW7G,EAAS4D,eAGnCvC,WAEAsE,MAAM,GAAI,IAbjB,gBAoBN,cAAC,EAAD,CAAUjC,KAAMA,OAjFF,cAACsB,EAAA,EAAD,CAAgBf,MAAO,CAAE9B,gBAAiB,W,wCC3ExDK,GAAYP,aAAW,iBAAO,CAClCqK,MAAO,CACLC,KAAM,EACNhK,MAAO,OACPF,WAAY,aACZmD,WAAY,OACZpD,OAAQ,eAINO,GAAYC,YAAY,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,QAERC,KAAM,UA8CKwJ,OA1Cf,WACE,IAAMxK,EAAUQ,KADA,EAGkBvB,IAA1BjB,EAHQ,EAGRA,SAAUW,EAHF,EAGEA,YAIZ8B,EAAUC,cAEhB,OAEE,aADA,CACCoB,EAAA,EAAD,CAAeC,MAAOpB,GAAtB,SACE,eAAC8J,GAAA,EAAD,CAAQlK,MAAM,cAAcmK,SAAS,SAArC,oBACG,eAAC1I,EAAA,EAAD,uBACE,eAAC2I,GAAA,EAAD,uBACC,cAACxI,EAAA,EAAD,CAGE2B,QAAS,kBAAMrD,EAAQsD,KAAR,MACf3B,QAAQ,KACR4B,UAAWhE,EAAQsK,MALrB,2BASA,eAACM,GAAA,EAAD,CACExI,QAAQ,WACRyI,QAAQ,2BACR3M,GAAG,qBACHc,MAAOhB,EACPiE,MAAO,CAAEQ,MAAO,IAAK8B,OAAQ,GAAIuG,WAAY,IAC7CpI,SAAU,SAACC,GAAD,OAAOhE,EAAYgE,EAAEC,OAAO5D,QANxC,UAQE,cAAC+L,GAAA,EAAD,CAAU/L,MAAO,MAAjB,iBACA,cAAC+L,GAAA,EAAD,CAAU/L,MAAO,MAAjB,gCC5DRwB,GAAYP,aAAW,iBAAO,CAClC+K,IAAK,CACH7K,gBAAiB,UACjBI,MAAO,QACP0K,UAAW,aAqBAD,OAjBf,WAEE,IAAMhL,EAAUQ,KAEhB,OACE,cAAC,IAAD,UAEE,sBAAKwD,UAAWhE,EAAQgL,IAAxB,UACE,cAAC,GAAD,IAEA,cAAC,IAAD,CAAOE,KAAK,IAAIpI,UAAWkE,EAAUmE,OAAK,IAC1C,cAAC,IAAD,CAAOD,KAAK,aAAapI,UAAWwG,GAAU6B,OAAK,U,OCpB3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UAEE,cAAC,GAAD,QAIJC,SAASC,eAAe,W","file":"static/js/main.c23bfc74.chunk.js","sourcesContent":["export const CoinList = (currency) =>\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\n\nexport const SingleCoin = (id) =>\n  `https://api.coingecko.com/api/v3/coins/${id}`;\n\n  //This api take id of the coin, number of days and the currency whether it is usd or inr. \nexport const HistoricalChart = (id, days = 365, currency) =>\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\n\n  //It take currency whether it is INR or USD.\nexport const TrendingCoins = (currency) =>\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\n\n// We have created a context named crypto.\n// crypto is the name of our context.\nconst Crypto = createContext();\n\n//Here children is all the component and components within those components which is passed as prop.\nconst CryptoContext = ({ children }) => {\n\n  //Made all the states that is used more than 1 time within the app.\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");\n    else if (currency === \"USD\") setSymbol(\"$\");\n  }, [currency]);\n\n  // We have to wrap the createContext return with .Provider.\n  // value take all the parameter that we have to export from the createContext.\n  // We can make and export anything from cryptoContext like functions, state etc\n  return (\n    <Crypto.Provider value={{ currency, setCurrency, symbol }}>\n    {children}          {/*Children is all the components and components within those components */}\n    </Crypto.Provider>\n  );\n};\n\nexport default CryptoContext;\n\n//Made a function cryptoState and returned Whole createContext within useContext hook.\nexport const CryptoState = () => {\n  return useContext(Crypto);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {\n  Container,\n  createTheme,\n  TableCell,\n  LinearProgress,\n  ThemeProvider,\n  Typography,\n  TextField,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Table,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../config/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\n\n\n//It is a regex string . It is used to give commas between the numbers.\n//You can get it from google.\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function CoinsTable() {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);  //Loading when seared fo the coin.\n  const [search, setSearch] = useState(\"\");   //Used to search the desired coin.\n  const [page, setPage] = useState(1);\n\n  const { currency, symbol } = CryptoState();\n\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#16171a\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#131111\",\n      },\n      fontFamily: \"Montserrat\",\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {\n        color: \"gold\",\n      },\n    },\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(currency));\n    console.log(data);\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) =>       //Coin is a parameter here.\n      //we will be searching in the two with two condition. name and symbol.\n      // first convert in the lowercase  then trigger the search state.\n        coin.name.toLowerCase().includes(search) ||\n        coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Container style={{ textAlign: \"center\" }}>\n        <Typography\n          variant=\"h4\"\n          style={{ margin: 18, fontFamily: \"Montserrat\" }}\n        >\n          Cryptocurrency Prices by Market Cap\n        </Typography>\n        <TextField    //used to give placeHolder in material ui.\n          label=\"Search For a Crypto Currency..\"\n          variant=\"outlined\"\n          style={{ marginBottom: 20, width: \"100%\" }}\n          onChange={(e) => setSearch(e.target.value)}  //This will chnage give the searched result.\n        />\n         <TableContainer component={Paper}>   {/*paper means table will be just like paper. Wide and horizontal. */}\n         {/* loading will check if the coin is still loading or not . \n         If it is still loading then it will show loading bar(LinearProgress in Material UI) */}\n          {loading ? (\n            <LinearProgress style={{ backgroundColor: \"gold\" }} />\n          ) : (   //If it's not loading then it will show the coins table\n          // Aria-label is used to give accessible name \n            <Table aria-label=\"simple table\">   \n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\n                <TableRow>\n                  {/* //Inside the table row we have that array and we are mapping on the array with variable head and we are rendering 5 table cells\n                  inside this */}\n                  {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n                    <TableCell\n                      style={{\n                        color: \"black\",\n                        fontWeight: \"700\",\n                        fontFamily: \"Montserrat\",\n                      }}\n                      key={head}            //providing key to the map.\n                      //Notice Coin has more space in the table row than other array elements. that is becuase to this algin\n                      // if head is coin that is the first one. Then , push all other to the right side.\n                      align={head === \"Coin\" ? \"\" : \"right\"}\n                    >\n                      {head}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {handleSearch()   //This will search the input coin.\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\n                  .map((row) => {\n                    const profit = row.price_change_percentage_24h > 0;\n                    return (\n                      <TableRow\n                       //This will send us to the coins page.\n                        onClick={() => history.push(`/coins/${row.id}`)}\n                        className={classes.row}\n                        key={row.name}   //Key is for the map.\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          style={{\n                            display: \"flex\",\n                            gap: 15,\n                          }}\n                        >\n                          <img\n                            src={row?.image}\n                            alt={row.name}\n                            height=\"50\"\n                            style={{ marginBottom: 10 }}\n                          />\n                          <div\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\n                          >\n                            <span\n                              style={{\n                                textTransform: \"uppercase\",\n                                fontSize: 22,\n                              }}\n                            >\n                              {row.symbol}\n                            </span>\n                            <span style={{ color: \"darkgrey\" }}>\n                              {row.name}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(row.current_price.toFixed(2))}\n                        </TableCell>\n                        <TableCell\n                          align=\"right\"\n                          style={{\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                            fontWeight: 500,\n                          }}\n                        >\n                          {profit && \"+\"}\n                          {row.price_change_percentage_24h.toFixed(2)}%\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(\n                            row.market_cap.toString().slice(0, -6)\n                          )}\n                          M\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n\n        {/* Comes from @material-ui/lab */}\n        <Pagination\n         // we put question mark here if it is empty.\n        //We want it to be fixed . we don't want it to be in decimal.\n          count={(handleSearch()?.length / 10).toFixed(0)}\n          style={{\n            padding: 20,\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n            //STyle to pagination is provided here.\n          classes={{ ul: classes.pagination }}\n           //When we click on any of the page . we want to set the page value and scroll the page to the 450px.\n        //On change we are going to take the value and set the page to the value and then scroll to 450px.\n          onChange={(_, value) => {\n            setPage(value);\n            window.scroll(0, 450);\n          }}\n        />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport { Link } from \"react-router-dom\";\nimport { TrendingCoins } from \"../../config/api\";\nimport { CryptoState } from \"../../CryptoContext\";\nimport { numberWithCommas } from \"../CoinsTable\";\n\nconst Carousel = () => {\n  const [trending, setTrending] = useState([]);  //Inital State is going to be an empty array.\n  //Imported currency and symbol from the CreateContext.\n  const { currency, symbol } = CryptoState();\n\n  // fetching the data from that api using axios.\n  const fetchTrendingCoins = async () => {\n    //This will return the data of that api.\n    const { data } = await axios.get(TrendingCoins(currency));\n\n    console.log(data);\n    setTrending(data);\n    // Gave that coins data to setTrending coins\n  };\n\n  //whenever any currency is changed we value gets updated.\n  useEffect(() => {\n    fetchTrendingCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const useStyles = makeStyles(() => ({\n    carousel: {\n      height: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    carouselItem: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n      textTransform: \"uppercase\",\n      color: \"white\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  //To get the items which will be shown in the carousel.\n  const items = trending.map((coin) => {\n\n    //Price change precentage data will be given by the API.\n    //If price coin price in  24h is greater than 0 then it will be profit.\n    let profit = coin?.price_change_percentage_24h >= 0;\n\n    return (\n      //It help us to travel from one page to another page, like here we want to coins id.\n      <Link className={classes.carouselItem} to={`/coins/${coin.id}`}>\n        <img      //It is the logo of the coins in the carasoul.\n          src={coin?.image}\n          alt={coin.name}\n          height=\"80\"\n          style={{ marginBottom: 10 }}\n        />\n         <span>       {/*These two span will show the name and the profit or loss percentage. */}\n          {coin?.symbol}\n          &nbsp;\n          <span\n            style={{    //If profit is > 0. Then, It will show rgb color otherwise red.\n              color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n              fontWeight: 500,\n            }}\n          >    \n           {profit && \"+\"}      {/* If it is profit then it will show +  */}\n             {coin?.price_change_percentage_24h?.toFixed(2)}%   {/*tofixed fixed upto  2 decimal places */}\n          </span>\n         </span>        {/*This span will show the current price */}\n        <span style={{ fontSize: 22, fontWeight: 500 }}>\n          {/* symbol will show the symbol USD or INR */}\n          {/* numberwithcommas to give commas between the numbers and toFixed to fix the number upto 2 decimal places */}\n          {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\n        </span>\n      </Link>\n    );\n  });\n\n  //Responsive object.\n  const responsive = {\n    0: {               //If it is 0px then it will show 2 items.\n      items: 2,\n    },\n    512: {             //If it is 512px or above then it will show 4 items on the scrren\n      items: 4,\n    },\n  };\n\n  return (\n    <div className={classes.carousel}>\n      <AliceCarousel              //   Styling carasoul\n        mouseTracking\n        infinite\n        autoPlayInterval={1000}\n        animationDuration={1500}\n        disableDotsControls\n        disableButtonsControls\n        responsive={responsive}    //How many item will be shown on the screen in one time.\n        items={items}              //It will be items shown in the carousel.   \n        autoPlay                \n      />\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport Carousel from \"./Carousel\";\n\nconst useStyles = makeStyles(() => ({\n  banner: {\n    //Image is present in public folder.\n    backgroundImage: \"url(./banner2.jpg)\",\n  },\n  bannerContent: {\n    height: 400,\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingTop: 25,\n    justifyContent: \"space-around\",\n  },\n  tagline: {\n    display: \"flex\",\n    height: \"40%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  carousel: {\n    height: \"50%\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nfunction Banner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.banner}>\n      <Container className={classes.bannerContent}>\n        <div className={classes.tagline}>\n          <Typography\n            variant=\"h2\"\n            style={{\n              fontWeight: \"bold\",\n              marginBottom: 15,\n              fontFamily: \"Montserrat\",\n            }}\n          >\n            Crypto Hunter\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            style={{\n              color: \"darkgrey\",\n              textTransform: \"capitalize\",\n              fontFamily: \"Montserrat\",\n            }}\n          >\n            Get all the Info regarding your favorite Crypto Currency\n          </Typography>\n        </div>\n        {/* This carousel came from react alice carousel */}\n        <Carousel />\n      </Container>\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport CoinsTable from \"../components/CoinsTable\";\n\nconst Homepage = () => {\n  return (\n    <>\n    {/* used fragment here\n    There is two things present in the home page */}\n      <Banner />\n      <CoinsTable />\n    </>\n  );\n};\n\nexport default Homepage;\n","import { makeStyles } from \"@material-ui/core\";\n\n\n//selected and onclick is used in coinInfo.\n//Children means using anything written in the selected button in the coinInfo can be\n// used here.\nconst SelectButton = ({ children, selected, onClick }) => {\n  const useStyles = makeStyles({\n    selectbutton: {\n      border: \"1px solid gold\",\n      borderRadius: 5,\n      padding: 10,\n      paddingLeft: 20,\n      paddingRight: 20,\n      fontFamily: \"Montserrat\",\n      cursor: \"pointer\",\n      backgroundColor: selected ? \"gold\" : \"\",\n      color: selected ? \"black\" : \"\",\n      //Whenever it is selected the style is going to be different.\n      fontWeight: selected ? 700 : 500,\n      \"&:hover\": {\n        backgroundColor: \"gold\",\n        color: \"black\",\n      },\n      width: \"22%\",\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <span onClick={onClick} className={classes.selectbutton}>\n      {children}\n    </span>\n  );\n};\n\nexport default SelectButton;\n","export const chartDays = [\n  {\n    label: \"24 Hours\",\n    value: 1,\n  },\n  {\n    label: \"30 Days\",\n    value: 30,\n  },\n  {\n    label: \"3 Months\",\n    value: 90,\n  },\n  {\n    label: \"1 Year\",\n    value: 365,\n  },\n];\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  CircularProgress,\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport SelectButton from \"./SelectButton\";\nimport { chartDays } from \"../config/data\";\nimport { CryptoState } from \"../CryptoContext\";\n\n\nconst CoinInfo = ({ coin }) => {\n  //This set and update the previous data of the coin.\n  const [historicData, setHistoricData] = useState();\n  //Of how many days the graph will be shown.\n  //inititally the day will be 1.\n  const [days, setDays] = useState(1);\n  //This will set and update the currency.\n  const { currency } = CryptoState();\n  //\n  const [flag, setflag] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0,\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const fetchHistoricData = async () => {\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n    setflag(true);\n    //We only want prices of the historyData.\n    setHistoricData(data.prices);\n  };\n\n  // console.log(historicData);\n\n  useEffect(() => {\n    fetchHistoricData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days]);\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.container}>\n      {/* If historicData is loading then it will show CircularProgress.*/}\n        {!historicData | flag===false ? (\n          <CircularProgress\n            style={{ color: \"gold\" }}\n            size={250}\n            thickness={1}\n          />\n        ) : (\n          // else if we are having the chart.\n          <>\n          {/* We are going to use the line chart.*/}\n            <Line\n            //The chart will have some data with it.\n            //This will show the x-axis . date or time.\n              data={{\n                //The prices and the dates are labels here.\n                labels: historicData.map((coin) => {\n                  //At the 0th index we have the actual date.\n                  //YOu can see it in the console by writing console.log(historicData);\n                  let date = new Date(coin[0]);\n                  let time =\n                  //This will give the exact time in the javascript.\n                    date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                      //If day is 1 then we are going to display time else we are going to display date.\n                  return days === 1 ? time : date.toLocaleDateString();\n                }),\n                //This will be y-axis and data of the chart.\n                datasets: [\n                  {\n                    data: historicData.map((coin) => coin[1]),\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\n                    borderColor: \"#EEBC1D\",\n                  },\n                ],\n              }}\n              //It is used to remove the dots on the chart.\n              options={{\n                elements: {\n                  point: {\n                    radius: 1,\n                  },\n                },\n              }}\n            />\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: 20,\n                justifyContent: \"space-around\",\n                width: \"100%\",\n              }}\n            >\n             {/* It will give the 4 buttons below the chart. */}\n             {/* ChartDays has been imported from the data which has all the days. */}\n              {chartDays.map((day) => (\n                <SelectButton\n                  key={day.value}\n                  //Whenever we click on the button it should set the data to that particular date.\n                  //Value is present in the data file.\n                  onClick={() => {setDays(day.value);\n                    setflag(false);\n                  }}\n                  //If day.value is equals to days. then it is selected.\n                  selected={day.value === days}\n                >\n                  {/* label is present in the data file. */}\n                  {day.label}\n                </SelectButton>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default CoinInfo;\n","import { LinearProgress, makeStyles, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport CoinInfo from \"../components/CoinInfo\";\nimport { SingleCoin } from \"../config/api\";\nimport { numberWithCommas } from \"../components/CoinsTable\";\nimport { CryptoState } from \"../CryptoContext\";\n\nconst CoinPage = () => {\n  //It is used to access Product details page, COin details page, etc.\n  //It takes the dynamic id of the page and returns to the page.\n  //Used when we can dynamic product id and product name.\n  //We get id variable which is given in the App.js/\n  const { id } = useParams();\n\n  //This set state will save the data whatever we get from the api.\n  const [coin, setCoin] = useState();\n\n  const { currency, symbol } = CryptoState();\n\n  //Fetching single coin data from the API.\n  const fetchCoin = async () => {\n    const { data } = await axios.get(SingleCoin(id));\n\n    setCoin(data);\n  };\n  \n\n  //To call the API function.\n  useEffect(() => {\n    fetchCoin();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: \"flex\",\n      [theme.breakpoints.down(\"md\")]: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      },\n    },\n    sidebar: {\n      width: \"30%\",\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n      },\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginTop: 25,\n      borderRight: \"2px solid grey\",\n    },\n    heading: {\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      fontFamily: \"Montserrat\",\n    },\n    description: {\n      width: \"100%\",\n      fontFamily: \"Montserrat\",\n      padding: 25,\n      paddingBottom: 15,\n      paddingTop: 0,\n      textAlign: \"justify\",\n    },\n    marketData: {\n      alignSelf: \"start\",\n      padding: 25,\n      paddingTop: 10,\n      width: \"100%\",\n      [theme.breakpoints.down(\"md\")]: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n      },\n      //Used to make responsive.\n      [theme.breakpoints.down(\"sm\")]: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        alignItems: \"start\",\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  //Checking if there is coin or not if the coin will not be there then it will show loading in linear progress bar.\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\n\n  return (\n    //There is two parts in this page .First one is Coin description part and second one is the chart part.\n    <div className={classes.container}>\n      <div className={classes.sidebar}>\n        <img\n          src={coin?.image.large}\n          alt={coin?.name}\n          height=\"200\"\n          style={{ marginBottom: 20 }}\n        />\n        <Typography variant=\"h3\" className={classes.heading}>\n          {coin?.name}\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.description}>\n        {/* ReactHtmlParser. we have some html in the description of the coin page. \n        ReactHtmlParser It is an package which convert the html description into the real text. en denotes english. \n        The description is very large so we want to split the desciption whenever full stop comes. We are taking only 0th index of the description because the desciption is very large and we can't show the whole description here.  */}\n          {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\n        </Typography>\n        <div className={classes.marketData}>\n          <span style={{ display: \"flex\" }}>\n            <Typography variant=\"h5\" className={classes.heading}>\n              Rank:\n            </Typography>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: \"Montserrat\",\n              }}\n            >\n              {/* This will give the rank of the coin the coin in terms of its market cap. */}\n              {numberWithCommas(coin?.market_cap_rank)}\n            </Typography>\n          </span>\n\n          <span style={{ display: \"flex\" }}>\n            <Typography variant=\"h5\" className={classes.heading}>\n              Current Price:\n            </Typography>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: \"Montserrat\",\n              }}\n            >\n              {symbol}{\" \"}\n              {numberWithCommas(\n                //This will be involved in changing the currency.\n                coin?.market_data.current_price[currency.toLowerCase()]\n              )}\n            </Typography>\n          </span>\n          <span style={{ display: \"flex\" }}>\n            <Typography variant=\"h5\" className={classes.heading}>\n              Market Cap:\n            </Typography>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: \"Montserrat\",\n              }}\n            >\n              {symbol}{\" \"}\n              {numberWithCommas(\n                coin?.market_data.market_cap[currency.toLowerCase()]\n                //It will convert the marketCap into the the string.\n                //It is necessary to convert because slice function can only be used with string. \n                  .toString()\n                  //This slice means removes -6 characters form the end and and from 0 to removing -6 character.\n                  .slice(0, -6)\n              )}\n              M\n            </Typography>\n          </span>\n        </div>\n      </div>\n      <CoinInfo coin={coin} />\n    </div>\n  );\n};\n\nexport default CoinPage;\n","import {\n  AppBar,\n  Container,\n  MenuItem,\n  Select,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    flex: 1,\n    color: \"gold\",\n    fontFamily: \"Montserrat\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\",\n    },\n    type: \"dark\",\n  },\n});\n\nfunction Header() {\n  const classes = useStyles();\n  // State of the app will be changed if we swap from INR to USD or USD to INR.\n  const { currency, setCurrency } = CryptoState();\n\n\n  // This is used to naviagte to other routes using push or replace function\n  const history = useHistory();\n\n  return (\n    //This is used to give dark theme in Material UI.\n    <ThemeProvider theme={darkTheme}>\n      <AppBar color=\"transparent\" position=\"static\">       {/*static position is default in css */}\n         <Container>         {/*Container makes something responsive in material ui. */}\n           <Toolbar>         {/*It comes with AppBar and provides styles like flex  */}\n            <Typography       //used to give and style text.\n\n              //  This onClick will navigate to home page when click on the logo of navbar\n              onClick={() => history.push(`/`)}    \n              variant=\"h6\"\n              className={classes.title}\n            >\n              Crypto Hunter\n            </Typography>\n            <Select       // gave option to choose INR or USD             \n              variant=\"outlined\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={currency}\n              style={{ width: 100, height: 40, marginLeft: 15 }}\n              onChange={(e) => setCurrency(e.target.value)}   //This is set the selceted currency.\n            >\n              <MenuItem value={\"USD\"}>USD</MenuItem>\n              <MenuItem value={\"INR\"}>INR</MenuItem>\n            </Select>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/core\";\nimport Homepage from \"./Pages/HomePage\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport CoinPage from \"./Pages/CoinPage\";\nimport Header from \"./components/Header\";\n\n// use Styles is used to provide styles. It returns a hook which can be used in the function component.\nconst useStyles = makeStyles(() => ({\n  App: {\n    backgroundColor: \"#14161a\",    //Blackish color\n    color: \"white\",                //White color for the text.\n    minHeight: \"100vh\",\n  },\n}));\n\nfunction App() {\n  //This is hook reutrned by makeStyles.\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter>\n    {/* That hook is used with classes and dot operator. */}\n      <div className={classes.App}>\n        <Header />\n        {/* / Gives the default page. Homepage and coinPage are the two pages here. */}\n        <Route path=\"/\" component={Homepage} exact />\n        <Route path=\"/coins/:id\" component={CoinPage} exact />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport CryptoContext from \"./CryptoContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CryptoContext>     \n      {/*We wrapped the whole app with CryptoContext because we want that all the state variables present in CryptoContext is made available in all the component present in App.js and saare component ke andar ke component me bhi available ho jaye.  */}\n      <App />\n       {/* We can also wrap App.js with this CryptoContext as all the component is present there */}\n    </CryptoContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}